{"version":3,"file":"static/js/591.9666b95b.chunk.js","mappings":"sRAkGA,EA7FiB,SAAHA,GAA2C,IAArCC,EAAED,EAAFC,GAAIC,EAAgBF,EAAhBE,iBACtBC,IAD+CC,EAAAA,EAAAA,GAAAJ,EAAAK,IACzBC,EAAAA,EAAAA,IAAU,CAC9BC,WAAY,eACZC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAFKO,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAIlBI,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/BG,EAAID,EAAA,GAAEE,EAAOF,EAAA,IAEpBG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAEtBC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqC,OAArDC,QAAQC,KAAK,kCAAoChC,GAAI4B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGnCG,MAAM,oEAADC,OACiDlC,GACpE,CAAEmC,MAAO,cAAeC,OAAQnB,EAAgBmB,SAChD,KAAD,EAHM,OAAHX,EAAGG,EAAAS,KAAAT,EAAAE,KAAA,EAKcL,EAAIa,OAAO,KAAD,EAA3BZ,EAAQE,EAAAS,KACZtB,EAAQW,GAAUE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAED,eAAbA,EAAAW,GAAIC,MACNT,QAAQU,IAAI,sCACZV,QAAQW,IAAGd,EAAAW,KAEXR,QAAQY,MAAM,0BAADT,OAA2BlC,GAAE4B,EAAAW,IAC3C,yBAAAX,EAAAgB,OAAA,GAAApB,EAAA,mBAEJ,kBAnBc,OAAAJ,EAAAyB,MAAA,KAAAC,UAAA,KAuBf,OAFIpC,GAAQS,IAEL,WACLF,EAAgB8B,OAClB,CACF,GAAG,CAAC/C,EAAIU,IAER,IAAMsC,GAAcC,EAAAA,EAAAA,IAAU,CAAEC,QAAS,EAAGC,KAAM,CAAED,QAAS,KAE7DE,GAA0DH,EAAAA,EAAAA,KAAU,iBAAO,CACzEI,UAAW,WACXC,MAAO,OACPJ,QAAS,MACTK,UAAW,EACZ,IAAEC,GAAAhD,EAAAA,EAAAA,GAAA4C,EAAA,GAAAK,EAAAD,EAAA,GALMH,EAASI,EAATJ,UAAWC,EAAKG,EAALH,MAAOJ,EAAOO,EAAPP,QAAWQ,EAAgBF,EAAA,GAOtD,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,IAAY,CACXC,OAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOd,GAAW,IAAEK,UAAAA,IACzBU,UAAW,OACXtD,IAAKA,EACLuD,YAAa,kBACXN,EAAiB,CACfJ,MAAO,OACPJ,QAAS,IACTG,UAAW,eACX,EAEJY,aAAc,kBACZP,EAAiB,CACfJ,MAAO,OACPJ,QAAS,MACTG,UAAW,YACX,EACHa,SAEAxD,GAAUI,GACTqD,EAAAA,EAAAA,MAACP,EAAAA,EAAAA,IAAY,CAEXQ,QAAS,WACPnE,EAAiBa,EACnB,EAAEoD,SAAA,CAEDpD,EAAKuD,oBACJV,EAAAA,EAAAA,KAAA,OAAKW,IAAKxD,EAAKyD,WAAYC,IAAK1D,EAAKuD,qBAEvCV,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,KAAa,CAACC,MAAO,CAAEP,MAAAA,EAAOJ,QAAAA,GAAUgB,SACtCpD,EAAK2D,UATH3D,EAAK4D,UAmBV,MAGV,C","sources":["components/ItemCard/ItemCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useInView } from \"react-intersection-observer\";\nimport \"./ItemCard.css\";\n\nconst ItemCard = ({ id, setDetailOverlay, ...rest }) => {\n  const [ref, inView] = useInView({\n    rootMargin: \"200px 0px\",\n  });\n\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController(); // this is used to cancel ongoing fetch requests when user updates the keyword to make sure we only run relavant queries\n\n    const fetchData = async () => {\n      console.info(\"fetching details for object id:\" + id);\n\n      try {\n        var res = await fetch(\n          `https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`,\n          { cache: \"force-cache\", signal: abortController.signal } // quick and inexpensive way to force browser to cache these subsequent calls since these will most likely be static result\n        );\n\n        var response = await res.json();\n        setItem(response);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Fetch details aborted ðŸ‘€\");\n          console.dir(err);\n        } else {\n          console.error(`Error fetching item id:${id}`, err);\n        }\n      }\n    };\n\n    if (inView) fetchData();\n\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [id, inView]);\n\n  const fadeInProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  const [{ transform, color, opacity }, setAnimatedProps] = useSpring(() => ({\n    transform: \"scale(1)\",\n    color: \"#000\",\n    opacity: \"0.7\",\n    marginTop: 0,\n  }));\n\n  return (\n    <animated.div\n      style={{ ...fadeInProps, transform }}\n      className={\"card\"}\n      ref={ref}\n      onMouseOver={() =>\n        setAnimatedProps({\n          color: \"#fff\",\n          opacity: \"1\",\n          transform: \"scale(1.06)\",\n        })\n      }\n      onMouseLeave={() =>\n        setAnimatedProps({\n          color: \"#000\",\n          opacity: \"0.7\",\n          transform: \"scale(1)\",\n        })\n      }\n    >\n      {inView && item ? (\n        <animated.div\n          key={item.objectID}\n          onClick={() => {\n            setDetailOverlay(item);\n          }}\n        >\n          {item.primaryImageSmall && (\n            <img alt={item.objectName} src={item.primaryImageSmall} />\n          )}\n          <animated.span style={{ color, opacity }}>\n            {item.title}\n            {/* <a\n              target=\"_new\"\n              href={item.objectURL}\n              aria-label={`View ${item.objectName} on museum's website`}\n            >\n              Link\n            </a> */}\n          </animated.span>\n        </animated.div>\n      ) : null}\n    </animated.div>\n  );\n};\n\nexport default ItemCard;\n"],"names":["_ref","id","setDetailOverlay","_useInView","_objectWithoutProperties","_excluded","useInView","rootMargin","_useInView2","_slicedToArray","ref","inView","_useState","useState","_useState2","item","setItem","useEffect","abortController","AbortController","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","response","wrap","_context","prev","next","console","info","fetch","concat","cache","signal","sent","json","t0","name","log","dir","error","stop","apply","arguments","abort","fadeInProps","useSpring","opacity","from","_useSpring","transform","color","marginTop","_useSpring2","_useSpring2$","setAnimatedProps","_jsx","animated","style","_objectSpread","className","onMouseOver","onMouseLeave","children","_jsxs","onClick","primaryImageSmall","alt","objectName","src","title","objectID"],"sourceRoot":""}