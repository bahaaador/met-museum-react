{"version":3,"file":"static/js/591.aa4d2774.chunk.js","mappings":"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","sources":["components/ItemCard/ItemCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useInView } from \"react-intersection-observer\";\nimport \"./ItemCard.css\";\n\nconst ItemCard = ({ id, setDetailOverlay, ...rest }) => {\n  const [ref, inView] = useInView({\n    rootMargin: \"200px 0px\",\n  });\n\n  const [item, setItem] = useState(null);\n\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  const handleImageLoaded = () => {\n    console.log(\"handleImageLoaded\", { imageLoaded });\n    setImageLoaded(true);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController(); // this is used to cancel ongoing fetch requests when user updates the keyword to make sure we only run relavant queries\n\n    const fetchData = async () => {\n      console.info(\"fetching details for object id:\" + id);\n\n      try {\n        var res = await fetch(\n          `https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`,\n          { cache: \"force-cache\", signal: abortController.signal } // quick and inexpensive way to force browser to cache these subsequent calls since these will most likely be static result\n        );\n\n        var response = await res.json();\n        setItem(response);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Fetch details aborted ðŸ‘€\");\n          console.dir(err);\n        } else {\n          console.error(`Error fetching item id:${id}`, err);\n        }\n      }\n    };\n\n    if (inView) fetchData();\n\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [id, inView]);\n\n  const fadeInProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  const fadeInPropsImage = useSpring({\n    opacity: imageLoaded ? 1 : 0,\n  });\n\n  const [{ transform, color, opacity }, setAnimatedProps] = useSpring(() => ({\n    transform: \"scale(1)\",\n    color: \"#000\",\n    opacity: \"0.7\",\n    marginTop: 0,\n  }));\n\n  const renderCardContent = () => {\n    if (!inView) {\n      return null;\n    }\n\n    if (item == null) {\n      return <Shimmer />;\n    }\n\n    return (\n      <animated.div\n        key={item.objectID}\n        onClick={() => {\n          setDetailOverlay(item);\n        }}\n      >\n        {item.primaryImageSmall && (\n          <animated.img\n            style={fadeInPropsImage}\n            hidden={true}\n            alt={item.objectName}\n            src={item.primaryImageSmall}\n            onLoad={handleImageLoaded}\n          />\n        )}\n        <animated.span style={{ color, opacity }}>{item.title}</animated.span>\n      </animated.div>\n    );\n  };\n\n  return (\n    <animated.div\n      style={{ ...fadeInProps, transform }}\n      className={\"card\"}\n      ref={ref}\n      onMouseOver={() =>\n        setAnimatedProps({\n          color: \"#fff\",\n          opacity: \"1\",\n          transform: \"scale(1.06)\",\n        })\n      }\n      onMouseLeave={() =>\n        setAnimatedProps({\n          color: \"#000\",\n          opacity: \"0.7\",\n          transform: \"scale(1)\",\n        })\n      }\n    >\n      {renderCardContent()}\n    </animated.div>\n  );\n};\n\nconst Shimmer = () => (\n  <div className=\"shimmer\" aria-label=\"Loading content\">\n    <div className=\"image\" />\n    <div className=\"content\">\n      <span className=\"title\" />\n    </div>\n  </div>\n);\n\nexport default ItemCard;\n"],"names":["Shimmer","_jsxs","className","children","_jsx","_ref","id","setDetailOverlay","_useInView","_objectWithoutProperties","_excluded","useInView","rootMargin","_useInView2","_slicedToArray","ref","inView","_useState","useState","_useState2","item","setItem","_useState3","_useState4","imageLoaded","setImageLoaded","handleImageLoaded","console","log","useEffect","abortController","AbortController","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","response","wrap","_context","prev","next","info","fetch","concat","cache","signal","sent","json","t0","name","dir","error","stop","apply","arguments","abort","fadeInProps","useSpring","opacity","from","fadeInPropsImage","_useSpring","transform","color","marginTop","_useSpring2","_useSpring2$","setAnimatedProps","animated","style","_objectSpread","onMouseOver","onMouseLeave","onClick","primaryImageSmall","hidden","alt","objectName","src","onLoad","title","objectID"],"sourceRoot":""}